version: "3.8"
services:
  backend:
    build:
      context: ./Backend
      dockerfile: Dockerfile
    ports:
      - "${BACKEND_PORT}:${BACKEND_PORT}"
    env_file:
      - .env
    depends_on:
      database:
        condition: service_healthy

  database:
    image: postgres:15
    container_name: postgres_db
    ports:
      - "${DATABASE_PORT}:5432"
    env_file:
      - .env
    volumes:
      - database_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # prisma-studio:
  #   image: node:lts
  #   working_dir: /app
  #   volumes:
  #     - ./Backend:/app
  #     - ./.env:/app/.env
  #   ports:
  #     - "5555:5555"
  #   command: >
  #     sh -c "if [ ! -d node_modules ]; then npm install; fi && npx prisma studio --port 5555"
  #   depends_on:
  #     - database
  #     - backend

  # storage:
  #   build:
  #     context: ./Storage
  #     dockerfile: Dockerfile
  #   ports:
  #     - "${STORAGE_PORT}:${STORAGE_PORT}"
  #   env_file:
  #     - .env.docker
  #   volumes:
  #     - ./images/uploads:/app/src/uploads
  #     - ./images/default:/app/src/default
  #   environment:
  #     - NODE_ENV=production

  # frontend:
  #   build:
  #     context: ./Frontend
  #     dockerfile: Dockerfile
  #   ports:
  #     - "8080:80"
  #   env_file:
  #     - .env
  #   depends_on:
  #     - backend

volumes:
  database_data:
